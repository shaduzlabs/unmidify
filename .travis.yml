sudo: required

dist: precise

language: cpp

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=g++-4.9
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5
#    - compiler: clang
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise-3.6
#          packages:
#            - clang-3.6
#      env: COMPILER=clang++-3.6
#    - compiler: clang
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#            - llvm-toolchain-precise-3.7
#          packages:
#            - clang-3.7
#      env: COMPILER=clang++-3.7

before_install:
  - WGET="travis_retry wget --no-check-certificate --continue --tries=20 --waitretry=10 --retry-connrefused --no-dns-cache --timeout 300"
  - sudo apt-get update -qq

install:

  # CMake 3.2.1
  - CMAKE_URL=https://cmake.org/files/v3.2/cmake-3.2.1-Linux-x86_64.tar.gz
  - mkdir cmake
  - $WGET -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${PWD}/cmake/bin:${PATH}

  # Doxygen 1.8.9.1
  - DOXYGEN_URL="http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.9.1.linux.bin.tar.gz"
  - mkdir doxygen && travis_retry wget --quiet -O - ${DOXYGEN_URL} | tar --strip-components=1 -xz -C doxygen
  - export PATH=${PWD}/doxygen/bin:${PATH}

  # Clang
#   - if [[ "${COMPILER}" =~ clang\+\+-3\.[56] ]]; then LLVM_URL="http://llvm.org/releases/3.6.1/llvm-3.6.1.src.tar.xz"; fi
#   - if [[ "${COMPILER}" =~ clang\+\+-3\.[56] ]]; then LIBCXX_URL="http://llvm.org/releases/3.6.1/libcxx-3.6.1.src.tar.xz"; fi
#   - if [[ "${COMPILER}" =~ clang\+\+-3\.[56] ]]; then LIBCXXABI_URL="http://llvm.org/releases/3.6.1/libcxxabi-3.6.1.src.tar.xz"; fi
#   - if [[ "${COMPILER}" =~ clang\+\+-3\.[56] ]]; then TAR_FMT="-xJ"; fi

#   - if [[ "${COMPILER}" == "clang++-3.7" ]]; then LLVM_URL="https://github.com/llvm-mirror/llvm/archive/master.tar.gz"; fi
#   - if [[ "${COMPILER}" == "clang++-3.7" ]]; then LIBCXX_URL="https://github.com/llvm-mirror/libcxx/archive/master.tar.gz"; fi
#   - if [[ "${COMPILER}" == "clang++-3.7" ]]; then LIBCXXABI_URL="https://github.com/llvm-mirror/libcxxabi/archive/master.tar.gz"; fi
#   - if [[ "${COMPILER}" == "clang++-3.7" ]]; then TAR_FMT="-xz"; fi

#   - mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
#   - $WGET -O - ${LLVM_URL} | tar --strip-components=1 ${TAR_FMT} -C llvm
#   - $WGET -O - ${LIBCXX_URL} | tar --strip-components=1 ${TAR_FMT} -C llvm/projects/libcxx
#   - $WGET -O - ${LIBCXXABI_URL} | tar --strip-components=1 ${TAR_FMT} -C llvm/projects/libcxxabi
#   - (cd llvm/build && cmake .. -DCMAKE_CXX_COMPILER=clang++ && make cxx -j2)


script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_CXX_COMPILER=$COMPILER .. && make -j2 check

branches:
  only:
    - master
    - develop
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "fzcPJLIK8JqmE7tnIkgZbl4I9nGmcN89PhI2IpBn1CGbwQfh4DQthIuKJHdyWZWHwZkx94WH31mDnvEXxPDumCwgFaTxp/YR8hIsA6cp0nWF2XmGCdksH9ON1EF9WO16J1t7XspHMAebiEm+d8tjXizJM6TYA+YhdejcAr09chNootEO1OTxhKoptZtNZUTAG5yeOvPZSAPUqVByKpV8roYnfYbSs4t1v15XeIj7J4WYHjy0Nvaq6xWfgxw7bkuLIVFPtLrzjfEi1lvuowFqSa0VqgXePhODpKM1EItdjDlxqS9cpA9P8EJFK3X/V9Wy56V6oSWfyJivM1AmJ5Ra/3ERsKTmfLV/+ZSPqobRPOxd6FC+KyPIXvcNz8ItVrY1Llu9oEKygQuZ/X5ax0WTOu0j1dzMqTNijh8+7VU2ajvD1sA13IXF3sJz1zsEhDqIvJcpOKO/4MlJIViOSVk/QISgfslquEkCUGj8dmCWo1T2YyR1jNANF8Ihqh/wPokvGQPENcV2N+zlLnX6Ca/qi72JPfaXLKWH+JdT7dTjDqBXXV/yppHU8HrJYtTJfuB81SpsbJge+nSpcpXH7/u+D9NF9KF7KMP1GcBtRpOGRNhIKsXbBEWQ3or5cfBDGGJnsfpUEFxGTFD5Z690OjLIiNoXPbdt8T2Vha5cC/hmRMs="

addons:
  coverity_scan:
    project:
      name: "shaduzlabs/unmidify"
      description: "Build submitted via Travis CI"
    notification_email: shaduz@shaduzlabs.com
    build_command_prepend: "make clean"
    build_command:   "make -j2 check"
    branch_pattern: master

notifications:
  email:
    on_success: change
    on_failure: change
